// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
  qrCodes   QRCode[]
}

model QRCode {
  id        Int          @id @default(autoincrement())
  ownerId   Int
  owner     User         @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  url       String
  isDynamic Boolean      @default(false)
  metadata  Json?
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  qrImage   String?
  events    Event[]
  histories UrlHistory[]
}

model UrlHistory {
  id          Int      @id @default(autoincrement())
  qrCodeId    Int
  qrCode      QRCode   @relation(fields: [qrCodeId], references: [id], onDelete: Cascade)
  previousUrl String
  updatedUrl  String
  updatedAt   DateTime @default(now())
}

model Event {
  id        Int      @id @default(autoincrement())
  qrCodeId  Int
  qrCode    QRCode   @relation(fields: [qrCodeId], references: [id], onDelete: Cascade)
  timestamp DateTime @default(now())
  location  String?
  device    String?
  platform  String?
  ipAddress String?
  userAgent String?
}
